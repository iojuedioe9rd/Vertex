name: Build with VS2022 and Premake

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    - name: Cache Premake Installation
      uses: actions/cache@v3
      with:
        path: C:\Users\runneradmin\.premake5
        key: premake5-${{ runner.os }}-${{ hashFiles('scripts/Setup.bat') }}

    - name: Install Premake (if not cached)
      if: steps.cache.outputs.cache-hit != 'true'
      uses: Jarod42/install-premake5@v1

    - name: Run Setup.bat script
      run: |
        cd scripts
        .\Setup.bat

    - name: Generate Visual Studio 2022 solution
      run: |
        premake5 vs2022

    - name: Locate and Build Solution (Debug)
      shell: cmd
      run: |
        for /f "tokens=*" %i in ('"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe') do set msbuild=%i
        "%msbuild%" Vertex.sln /p:Configuration=Debug

    - name: Locate and Build Solution (Release)
      shell: cmd
      run: |
        for /f "tokens=*" %i in ('"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe') do set msbuild=%i
        "%msbuild%" Vertex.sln /p:Configuration=Release

    - name: Locate and Build Solution (Dist)
      shell: cmd
      run: |
        for /f "tokens=*" %i in ('"C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe') do set msbuild=%i
        "%msbuild%" Vertex.sln /p:Configuration=Dist
