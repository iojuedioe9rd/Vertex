# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  ifeq ($(origin CC), default)
    CC = emcc
  endif
  ifeq ($(origin CXX), default)
    CXX = em++
  endif
  ifeq ($(origin AR), default)
    AR = emar
  endif
  TARGETDIR = ../bin/Debug-emscripten-wasm32/Vertex-Editor
  TARGET = $(TARGETDIR)/Vertex-Editor.wasm
  OBJDIR = ../bin-int/Debug-emscripten-wasm32/Vertex-Editor
  DEFINES += -DYAML_CPP_STATIC_DEFINE -D__EMSCRIPTEN__ -DVX_DEBUG
  INCLUDES += -IC:/dev/emsdk/upstream/emscripten/system/include -I../Engine/src -I../VXEntities/src -I../Engine/vendor/spdlog/include -I../Engine/vendor/glm -I../Engine/vendor/entt/include -I../Engine/vendor/imgui
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -g -msse4.2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -g -msse4.2 -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Debug-emscripten-wasm32/Engine/libEngine.wasm ../Engine/vendor/imgui/bin/Debug-emscripten-wasm32/ImGui/libImGui.a
  LDDEPS += ../bin/Debug-emscripten-wasm32/Engine/libEngine.wasm ../Engine/vendor/imgui/bin/Debug-emscripten-wasm32/ImGui/libImGui.a
  ALL_LDFLAGS += $(LDFLAGS)
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),release)
  ifeq ($(origin CC), default)
    CC = emcc
  endif
  ifeq ($(origin CXX), default)
    CXX = em++
  endif
  ifeq ($(origin AR), default)
    AR = emar
  endif
  TARGETDIR = ../bin/Release-emscripten-wasm32/Vertex-Editor
  TARGET = $(TARGETDIR)/Vertex-Editor.wasm
  OBJDIR = ../bin-int/Release-emscripten-wasm32/Vertex-Editor
  DEFINES += -DYAML_CPP_STATIC_DEFINE -D__EMSCRIPTEN__ -DVX_RELEASE
  INCLUDES += -IC:/dev/emsdk/upstream/emscripten/system/include -I../Engine/src -I../VXEntities/src -I../Engine/vendor/spdlog/include -I../Engine/vendor/glm -I../Engine/vendor/entt/include -I../Engine/vendor/imgui
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -g -msse4.2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O2 -g -msse4.2 -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Release-emscripten-wasm32/Engine/libEngine.wasm ../Engine/vendor/imgui/bin/Release-emscripten-wasm32/ImGui/libImGui.a
  LDDEPS += ../bin/Release-emscripten-wasm32/Engine/libEngine.wasm ../Engine/vendor/imgui/bin/Release-emscripten-wasm32/ImGui/libImGui.a
  ALL_LDFLAGS += $(LDFLAGS)
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

ifeq ($(config),dist)
  ifeq ($(origin CC), default)
    CC = emcc
  endif
  ifeq ($(origin CXX), default)
    CXX = em++
  endif
  ifeq ($(origin AR), default)
    AR = emar
  endif
  TARGETDIR = ../bin/Dist-emscripten-wasm32/Vertex-Editor
  TARGET = $(TARGETDIR)/Vertex-Editor.wasm
  OBJDIR = ../bin-int/Dist-emscripten-wasm32/Vertex-Editor
  DEFINES += -DYAML_CPP_STATIC_DEFINE -D__EMSCRIPTEN__ -DVX_DIST
  INCLUDES += -IC:/dev/emsdk/upstream/emscripten/system/include -I../Engine/src -I../VXEntities/src -I../Engine/vendor/spdlog/include -I../Engine/vendor/glm -I../Engine/vendor/entt/include -I../Engine/vendor/imgui
  FORCE_INCLUDE +=
  ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
  ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m32 -O3 -msse4.2
  ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m32 -O3 -msse4.2 -std=c++17
  ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
  LIBS += ../bin/Dist-emscripten-wasm32/Engine/libEngine.wasm ../Engine/vendor/imgui/bin/Dist-emscripten-wasm32/ImGui/libImGui.a
  LDDEPS += ../bin/Dist-emscripten-wasm32/Engine/libEngine.wasm ../Engine/vendor/imgui/bin/Dist-emscripten-wasm32/ImGui/libImGui.a
  ALL_LDFLAGS += $(LDFLAGS)
  LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
all: prebuild prelink $(TARGET)
	@:

endif

OBJECTS := \
	$(OBJDIR)/EditorLayer.o \
	$(OBJDIR)/ContentBrowserPanel.o \
	$(OBJDIR)/SceneHierarchyPanel.o \
	$(OBJDIR)/ThumbnailCache.o \
	$(OBJDIR)/VertexEditorApp.o \

RESOURCES := \
	$(OBJDIR)/Resource.res \

CUSTOMFILES := \

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

$(TARGET): $(GCH) ${CUSTOMFILES} $(OBJECTS) $(LDDEPS) $(RESOURCES) | $(TARGETDIR)
	@echo Linking Vertex-Editor
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(CUSTOMFILES): | $(OBJDIR)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Vertex-Editor
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) $(PCH) | $(OBJDIR)
$(GCH): $(PCH) | $(OBJDIR)
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
else
$(OBJECTS): | $(OBJDIR)
endif

$(OBJDIR)/EditorLayer.o: src/EditorLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ContentBrowserPanel.o: src/Panels/ContentBrowserPanel.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneHierarchyPanel.o: src/Panels/SceneHierarchyPanel.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ThumbnailCache.o: src/Panels/ThumbnailCache.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Resource.res: src/Resource.rc
	@echo $(notdir $<)
	$(SILENT) $(RESCOMP) $< -O coff -o "$@" $(ALL_RESFLAGS)
$(OBJDIR)/VertexEditorApp.o: src/VertexEditorApp.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(OBJDIR)/$(notdir $(PCH)).d
endif