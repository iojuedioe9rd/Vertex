# GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild prelink

ifeq ($(config),debug)
  CSC = csc
  RESGEN = resgen
  TARGETDIR = ../Vertex-Editor/Resources/Scripts
  TARGET = $(TARGETDIR)/Vertex-ScriptCore.wasm
  OBJDIR = ../Vertex-Editor/Resources/Scripts/Intermediates/Debug
  FLAGS = /noconfig /d:YAML_CPP_STATIC_DEFINE /d:__EMSCRIPTEN__
  DEPENDS =
  REFERENCES = 
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),release)
  CSC = csc
  RESGEN = resgen
  TARGETDIR = ../Vertex-Editor/Resources/Scripts
  TARGET = $(TARGETDIR)/Vertex-ScriptCore.wasm
  OBJDIR = ../Vertex-Editor/Resources/Scripts/Intermediates/Release
  FLAGS = /optimize /noconfig /d:YAML_CPP_STATIC_DEFINE /d:__EMSCRIPTEN__
  DEPENDS =
  REFERENCES = 
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

ifeq ($(config),dist)
  CSC = csc
  RESGEN = resgen
  TARGETDIR = ../Vertex-Editor/Resources/Scripts
  TARGET = $(TARGETDIR)/Vertex-ScriptCore.wasm
  OBJDIR = ../Vertex-Editor/Resources/Scripts/Intermediates/Dist
  FLAGS = /noconfig /d:YAML_CPP_STATIC_DEFINE /d:__EMSCRIPTEN__
  DEPENDS =
  REFERENCES = 
  define PREBUILDCMDS
  endef
  define PRELINKCMDS
  endef
  define POSTBUILDCMDS
  endef
endif

FLAGS += /t:library 
REFERENCES += 

SOURCES += \
	Source/Vertex/Asset.cs \
	Source/Vertex/Audio.cs \
	Source/Vertex/Entities/CPPEntity.cs \
	Source/Vertex/Entities/base_box_collider_2d/ENTBaseBoxCollier2D.cs \
	Source/Vertex/Entities/base_rb2d/ENTBaseRigidbody2D.cs \
	Source/Vertex/Entity.cs \
	Source/Vertex/Input.cs \
	Source/Vertex/InternalCalls.cs \
	Source/Vertex/KeyCode.cs \
	Source/Vertex/Logger.cs \
	Source/Vertex/Object.cs \
	Source/Vertex/Renderer2D.cs \
	Source/Vertex/Texture.cs \
	Source/Vertex/Vectors/Colour.cs \
	Source/Vertex/Vectors/Vector2.cs \
	Source/Vertex/Vectors/Vector3.cs \
	Source/Vertex/Vectors/Vector4.cs \

EMBEDFILES += \

RESPONSE += $(OBJDIR)/Vertex-ScriptCore.rsp
SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

all: $(TARGETDIR) $(OBJDIR) prebuild $(EMBEDFILES) $(COPYFILES) prelink $(TARGET)

$(TARGET): $(SOURCES) $(EMBEDFILES) $(DEPENDS) $(RESPONSE)
	$(SILENT) $(CSC) /nologo /out:$@ $(FLAGS) $(REFERENCES) @$(RESPONSE) $(patsubst %,/resource:%,$(EMBEDFILES))
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(RESPONSE): Makefile
	@echo Generating response file
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f $(RESPONSE)
else
	$(SILENT) if exist $(RESPONSE) del $(OBJDIR)\Vertex-ScriptCore.rsp
endif
	@echo Source/Vertex/Asset.cs >> $(RESPONSE)
	@echo Source/Vertex/Audio.cs >> $(RESPONSE)
	@echo Source/Vertex/Entities/CPPEntity.cs >> $(RESPONSE)
	@echo Source/Vertex/Entities/base_box_collider_2d/ENTBaseBoxCollier2D.cs >> $(RESPONSE)
	@echo Source/Vertex/Entities/base_rb2d/ENTBaseRigidbody2D.cs >> $(RESPONSE)
	@echo Source/Vertex/Entity.cs >> $(RESPONSE)
	@echo Source/Vertex/Input.cs >> $(RESPONSE)
	@echo Source/Vertex/InternalCalls.cs >> $(RESPONSE)
	@echo Source/Vertex/KeyCode.cs >> $(RESPONSE)
	@echo Source/Vertex/Logger.cs >> $(RESPONSE)
	@echo Source/Vertex/Object.cs >> $(RESPONSE)
	@echo Source/Vertex/Renderer2D.cs >> $(RESPONSE)
	@echo Source/Vertex/Texture.cs >> $(RESPONSE)
	@echo Source/Vertex/Vectors/Colour.cs >> $(RESPONSE)
	@echo Source/Vertex/Vectors/Vector2.cs >> $(RESPONSE)
	@echo Source/Vertex/Vectors/Vector3.cs >> $(RESPONSE)
	@echo Source/Vertex/Vectors/Vector4.cs >> $(RESPONSE)

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

prebuild:
	$(PREBUILDCMDS)

prelink:
	$(PRELINKCMDS)
